#version 410

out vec4 o_color;

in vec3 v_normal;
in vec2 v_uv;

in float v_camera_dist;

uniform sampler2D u_albedo_map;
uniform bool u_has_albedo_map;
uniform bool u_blend_to_background;
uniform int u_layer_idx;
uniform float u_shade;

void main(){
    vec3 normal = normalize(v_normal);
    float shade = dot(normal, normalize(vec3(0, 1, 0)));
    shade = max(shade, 0.4);
    vec3 albedo = vec3(0.8, 0.8, 0.8);
    if(u_has_albedo_map)
        albedo = texture(u_albedo_map, v_uv).xyz;


    float alpha = 1.0;
    if(u_blend_to_background){
        alpha = -(v_camera_dist - 3500) / 2000;
        alpha = max(min(1, alpha), 0);
    }

    o_color = vec4(shade * albedo, alpha);

/*

    if(u_layer_idx == 0)
        o_color = vec4(1, 0, 0, 1);
    else if(u_layer_idx == 1)
        o_color = vec4(0, 1, 0, 1);
    else if(u_layer_idx == 2)
        o_color = vec4(0, 0, 1, 1);
    o_color *= u_shade;
    o_color.w = 1;
*/

    float gamma = 2.2;
    o_color.rgb = pow(o_color.rgb, vec3(1.0/gamma));
}